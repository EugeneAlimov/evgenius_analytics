{"version":3,"file":"static/js/App.fcf894e3.chunk.js","mappings":"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","sources":["webpack://interface/./src/Components/Navbar/NavBar.module.css?8473","Components/UI/Dialog/DialogComponent.jsx","Components/Navbar/Navbar.jsx","Libs/mathRound.js","App.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Wraper\":\"NavBar_Wraper__9N5lw\",\"Ul\":\"NavBar_Ul__06COG\",\"LinkItem\":\"NavBar_LinkItem__UZb4f\",\"LinkItemActive\":\"NavBar_LinkItemActive__QWNq4\",\"logo\":\"NavBar_logo__S75H+\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../../api/userApi';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Typography from '@mui/material/Typography';\nimport classes from '../../../Components/Navbar/NavBar.module.css'\n\nexport default function FormDialog() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [open, setOpen] = useState(false);\n\n  const dispatch = useDispatch()\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  };\n  \n  const handleClose = () => {\n    if (username !== '') {\n      dispatch(login({ username: username, password: password }))\n    }\n    setUsername('')\n    setPassword('')\n    setOpen(false)\n  }\n\n  return (\n    <div>\n    <Typography className={classes.LinkItem}\n      variant=\"overline\"\n      display=\"block\"\n        sx={{\n        fontSize: 18,\n        cursor: 'pointer',\n      }}\n      onClick={handleClickOpen}>\n      Log in\n    </Typography>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Log In</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter your email and password to log in.\n          </DialogContentText>\n          <TextField\n            value={username}\n            onChange={(event) => setUsername(event.currentTarget.value)}\n            autoFocus\n            margin=\"dense\"\n            label=\"Login name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n          />\n          <TextField\n            value={password}\n            onChange={(event) => setPassword(event.currentTarget.value)}\n            margin=\"dense\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleClose}>Login</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport classes from './NavBar.module.css'\nimport { Grid, Typography } from '@mui/material';\nimport { NavLink } from \"react-router-dom\";\nimport ResponsiveDialog from \"../../Components/UI/Dialog/DialogComponent\";\nimport { logout } from \"../../api/userApi\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst NavBar = () => {\n\n    const isLoggedIn = useSelector((state) => state.login.isLoggedIn)\n    const refreshToken = useSelector((state) => state.login.token.refresh)\n    const userName = useSelector((state) => state.login.user.username)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const logoutHandler = () => {\n        dispatch(logout(refreshToken))\n        navigate('analytics', {replace: true})\n    }\n\n    return(\n        <Grid item xs={12}>\n            <div className={classes.Wraper}>\n                <Typography variant=\"button\" display=\"block\" sx={{ color: 'white', fontSize: 30, ml: 2 }} >\n                    Evgenius\n                </Typography>\n                <ul className={classes.Ul}>\n                    <li>\n                        <NavLink end to={routes.analytics}\n                            className={({ isActive }) => isActive ? classes.LinkItemActive : classes.LinkItem}\n                        >\n                            <Typography variant=\"overline\" display=\"block\" sx={{ mr: 1, fontSize: 18, }} >\n                                Analytic\n                            </Typography>\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink end to={routes.dashBoard}\n                            className={({ isActive }) => isActive ? classes.LinkItemActive : classes.LinkItem}\n                        >\n                            <Typography variant=\"overline\" display=\"block\" sx={{ mr: 1, fontSize: 18, }} >\n                                Dash board\n                            </Typography>\n                        </NavLink>\n                    </li>\n\n                    <li >\n                        <a href='/admin/' className={classes.LinkItem} >\n                            <Typography variant=\"overline\" display=\"block\" sx={{ ml: 1, mr: 1, fontSize: 18, }} >\n                                Admin\n                            </Typography>\n                        </a>\n                    </li>\n                    <li>\n                        <NavLink to={routes.settings}\n                            className={({ isActive }) => isActive ? classes.LinkItemActive : classes.LinkItem}\n                        >\n                            <Typography variant=\"overline\" display=\"block\" sx={{ ml: 1, mr: 1, fontSize: 18, }} >\n                            Settings\n                            </Typography>\n                        </NavLink>\n                    </li>\n                    {\n                    isLoggedIn\n                    ?\n                    <>\n                        <li>\n                            <NavLink to={routes.user }className={({ isActive }) => isActive ? classes.LinkItemActive : classes.LinkItem} >\n                                <Typography variant=\"overline\" display=\"block\" sx={{ ml: 1, mr: 1, fontSize: 18, }} >\n                                    {userName} Page\n                                </Typography>\n                            </NavLink>\n                        </li>\n                        <li>\n                            <Typography className={classes.LinkItem} variant=\"overline\" display=\"block\"\n                                sx={{ ml: 1, fontSize: 18, cursor: 'pointer' }}\n                                onClick={logoutHandler}\n                            >\n                                Log out\n                            </Typography>\n                        </li>\n                    </>\n                        :\n                    <li>\n                        <ResponsiveDialog/>\n                    </li>\n                    }\n                    </ul>\n                {/* <Outlet /> */}\n            </div>\n        </Grid>\n    )\n}\n\nexport default NavBar\n","export default  (function() {\n    /**\n     * Корректировка округления десятичных дробей.\n     *\n     * @param {String}  type  Тип корректировки.\n     * @param {Number}  value Число.\n     * @param {Integer} exp   Показатель степени (десятичный логарифм основания корректировки).\n     * @returns {Number} Скорректированное значение.\n     */\n    function decimalAdjust(type, value, exp) {\n      // Если степень не определена, либо равна нулю...\n      if (typeof exp === 'undefined' || +exp === 0) {\n        return Math[type](value);\n      }\n      value = +value;\n      exp = +exp;\n      // Если значение не является числом, либо степень не является целым числом...\n      if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n        return NaN;\n      }\n      // Сдвиг разрядов\n      value = value.toString().split('e');\n      value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n      // Обратный сдвиг\n      value = value.toString().split('e');\n      return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n    }\n  \n    // Десятичное округление к ближайшему\n    if (!Math.round10) {\n      Math.round10 = function(value, exp) {\n        return decimalAdjust('round', value, exp);\n      };\n    }\n    // Десятичное округление вниз\n    if (!Math.floor10) {\n      Math.floor10 = function(value, exp) {\n        return decimalAdjust('floor', value, exp);\n      };\n    }\n    // Десятичное округление вверх\n    if (!Math.ceil10) {\n      Math.ceil10 = function(value, exp) {\n        return decimalAdjust('ceil', value, exp);\n      };\n    }\n  })();\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport NavBar from \"./Components/Navbar/Navbar\";\nimport mathRound from \"./Libs/mathRound\";\nimport { Outlet } from \"react-router-dom\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { getTagsAndGroupsQuery } from \"./api/analitycApi\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTagsAndGroupsQuery());\n  }, [dispatch]);\nconsole.log('qwqwqwqw');\n  return (\n    <div className=\"App\">\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <NavBar />\n        <div style={{ marginTop: \"76px\" }}></div>\n      </LocalizationProvider>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n"],"names":["FormDialog","useState","username","setUsername","password","setPassword","open","setOpen","dispatch","useDispatch","handleClose","login","Typography","className","classes","variant","display","sx","fontSize","cursor","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","value","onChange","event","currentTarget","autoFocus","margin","label","type","fullWidth","DialogActions","Button","isLoggedIn","useSelector","state","refreshToken","token","refresh","userName","user","navigate","useNavigate","Grid","item","xs","color","ml","end","to","routes","isActive","mr","href","logout","replace","decimalAdjust","exp","Math","isNaN","NaN","toString","split","round10","floor10","ceil10","useEffect","getTagsAndGroupsQuery","console","log","LocalizationProvider","dateAdapter","AdapterDateFns","style","marginTop"],"sourceRoot":""}