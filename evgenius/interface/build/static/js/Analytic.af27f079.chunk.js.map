{"version":3,"file":"static/js/Analytic.af27f079.chunk.js","mappings":"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","sources":["Libs/getWindowDimensions.js","Components/SaveSetComponent/SaveSetCamponent.jsx","Components/AccordionAnalitycs/AllTagsList/AllTagsList.jsx","Components/AccordionAnalitycs/SelectedTagsList/SelectedTagsList.jsx","Components/DateTimePickers/DatePickerComponent/DateTimePickerComponent.jsx","Components/Notification.jsx","Libs/influxDataCreater.js","api/InfluxAPI.js","Views/Analityc.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return [\n      width,\n      height\n    ]\n  }\n  \n   const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  \n    useEffect(() => {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return windowDimensions;\n  }\n  \n  export default useWindowDimensions\n","import React, { useState } from \"react\";\nimport { Stack, TextField, Popper, Fade, Button, Paper } from \"@mui/material\";\n\n\nconst SaveSetComponent = ({\n  closePopperHandle,\n  isPopOpen,\n  popAnchorEl,\n  popPlacement,\n}) => {\n\n  const [datasetName, setDatasetName] = useState('')\n\n  return (\n    <Popper open={ isPopOpen } anchorEl={popAnchorEl} placement={popPlacement} transition >\n      {({ TransitionProps }) => (\n      <Fade {...TransitionProps} timeout={350}>\n        <Paper sx={{ p: 2, m: 2  }} elevation={10}>\n          <Stack spacing={2}>\n            <TextField\n              value={datasetName}\n              onChange={(event) => (setDatasetName(event.currentTarget.value))}\n              id=\"outlined-search\"\n              label=\"Enter dataset name\"\n              type=\"search\"\n              size=\"large\"\n              autoFocus={true}\n            />\n            <Button\n              onClick={() => {\n                closePopperHandle(datasetName, true)\n                setDatasetName('')\n                }\n              }\n              sx={{ width: '100%', height: '50px' }}\n              variant=\"contained\" size=\"large\"\n            >\n        Save\n            </Button>\n            <Button\n              onClick={() => {\n                closePopperHandle(datasetName, false)\n                setDatasetName('')\n                }\n              }\n              sx={{ width: '100%', height: '50px' }}\n              variant=\"contained\" size=\"large\"\n            >\n        Cansel\n            </Button>\n          </Stack>\n        </Paper>\n      </Fade>\n    )}\n  </Popper>\n  )\n}\n\nexport default SaveSetComponent","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Paper,\n  ListItem,\n  Box,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Checkbox,\n  Tooltip,\n  TextField,\n  Stack,\n  Autocomplete,\n  Typography,\n} from \"@mui/material\";\nimport { FixedSizeList } from \"react-window\";\nimport { useEffect } from \"react\";\nimport binarySearch from \"../../../Libs/binarySearch\";\n\nconst AllTagsList = ({ height, checkTags, selectedTags }) => {\n  const dispatch = useDispatch();\n\n  const tags = useSelector((state) => state.analytic.tags);\n  const groups = useSelector((state) => state.analytic.groups);\n\n  const [groupFilter, setGroupFilter] = useState(null);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [value, setValue] = useState(null);\n  const [filteredByGroupTags, setFilteredByGroupsTags] = useState([]);\n  const [searchedAndFilteredByGroupTags, setSearchedAndFilteredByGroupTags] = useState([]);\n\n  useEffect(() => {\n    setGroupFilter(value);\n  }, [value]);\n\n  useEffect(() => {\n    if (groupFilter === null) {\n      setFilteredByGroupsTags(tags);\n      return;\n    }\n    const tagsArr = tags.filter((tag) => tag.label === groupFilter.label);\n    setFilteredByGroupsTags(tagsArr);\n  }, [groupFilter, tags]);\n\n  useEffect(() => {\n    const tagsArr = filteredByGroupTags.filter((tag) =>\n      tag.name_tag.toLowerCase().includes(searchValue.toLowerCase())\n    );\n    setSearchedAndFilteredByGroupTags(tagsArr);\n  }, [filteredByGroupTags, searchValue]);\n\n  const createCheckedTagsArray = (id) => {\n    let tempArrSelectedTags = [...selectedTags];\n\n    const obj = selectedTags.find((el) => el.id === id);\n    const elemIndex = binarySearch(tags, id);\n\n    if (!!obj) {\n      tempArrSelectedTags = selectedTags.filter((el) => el.id !== id);\n      console.log(tempArrSelectedTags, obj);\n    } else {\n      tempArrSelectedTags.push(tags[elemIndex]);\n    }\n\n    dispatch(checkTags(tempArrSelectedTags));\n  };\n\n  const lisTtagsLength = searchedAndFilteredByGroupTags.length;\n  const rowHeith = height - 282;\n\n  const Row = ({ index, style }) => (\n    <Tooltip\n      key={index}\n      placement=\"right\"\n      title={\n        <Typography sx={{ m: 0 }} paragraph={true}>\n          Address: {searchedAndFilteredByGroupTags[index].address}\n          <br />\n          Datatype: {searchedAndFilteredByGroupTags[index].data_type}\n          <br />\n          Tagtable: {searchedAndFilteredByGroupTags[index].tag_table}\n          <br />\n          Comment: {searchedAndFilteredByGroupTags[index].comment}\n          <br />\n          Group: {searchedAndFilteredByGroupTags[index].label}\n        </Typography>\n      }\n      style={style}\n    >\n      <ListItem divider dense={true}>\n        <ListItemButton\n          role={undefined}\n          onClick={() => createCheckedTagsArray(searchedAndFilteredByGroupTags[index].id)}\n          dense={true}\n        >\n          <ListItemIcon sx={{ minWidth: \"35px\" }}>\n            <Checkbox\n              edge=\"start\"\n              checked={\n                !!selectedTags.find((el) => el.id === searchedAndFilteredByGroupTags[index].id)\n              }\n              tabIndex={-1}\n              disableRipple={true}\n              inputProps={{ \"aria-labelledby\": searchedAndFilteredByGroupTags[index].id }}\n            />\n          </ListItemIcon>\n          <ListItemText\n            id={searchedAndFilteredByGroupTags[index].id}\n            primary={\n              <Typography sx={{ m: 0, overflowWrap: \"break-word\" }} paragraph={true} noWrap={false}>\n                {searchedAndFilteredByGroupTags[index].name_tag} <br />\n              </Typography>\n            }\n          />\n        </ListItemButton>\n      </ListItem>\n    </Tooltip>\n  );\n\n  return (\n    <Paper sx={{ p: 2, m: 2, height: height - 64, width: \"420px\" }} elevation={10} square>\n      <Box component=\"div\" mb={0} p={1} sx={{ border: \"none\", minHeight: \"10px\" }}>\n        <Typography display=\"block\" sx={{ color: \"#666666\", fontSize: 26, ml: 2 }}>\n          Please, select a tags from list\n        </Typography>\n      </Box>\n      <Paper sx={{ m: 0 }} elevation={5} square>\n        <Box component=\"div\" mb={2} p={2} sx={{ border: \"none\", minHeight: \"10px\" }}>\n          <Stack direction=\"column\" spacing={3}>\n            <TextField\n              value={searchValue}\n              onChange={(event) => setSearchValue(event.currentTarget.value)}\n              sx={{ offset: 100 }}\n              id=\"outlined-search\"\n              label=\"Search tag\"\n              type=\"search\"\n              size=\"small\"\n            />\n            <Autocomplete\n              size=\"small\"\n              disablePortal\n              id=\"combo-box-demo\"\n              options={groups}\n              sx={{ offset: 100 }}\n              freeSolo\n              value={value}\n              onChange={(_, newText) => {\n                setValue(newText);\n              }}\n              renderInput={(params) => <TextField {...params} label=\"Filter by group\" />}\n            />\n          </Stack>\n        </Box>\n      </Paper>\n      <FixedSizeList\n        height={rowHeith}\n        width={\"100%\"}\n        itemSize={64}\n        itemCount={lisTtagsLength}\n        layout=\"vertical\"\n        overscanCount={8}\n      >\n        {Row}\n      </FixedSizeList>\n    </Paper>\n  );\n};\n\nexport default AllTagsList;\n","import { Paper, Tooltip, Box, Typography } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\n\nimport { List, ListItem, ListItemText, IconButton } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nconst SelectedTagsList = ({ height, checkTags, selectedTags }) => {\n  // const selectedTags = useSelector((state) => state.analytic.selectedTags);\nconsole.log(selectedTags);\n  const dispatch = useDispatch();\n\n  const removeSelectedTagHandler = (index) => {\n    let tempArrSelectedTags = [...selectedTags];\n    tempArrSelectedTags.splice(index, 1);\n    dispatch(checkTags(tempArrSelectedTags));\n  };\n\n  return (\n    <Paper sx={{ p: 2, m: 2, height: height - 64, width: \"420px\" }} elevation={10} square>\n      <Box component=\"div\" mb={0} p={1} sx={{ border: \"none\", minHeight: \"10px\" }}>\n        <Typography display=\"block\" sx={{ color: \"#666666\", fontSize: 26, ml: 2 }}>\n          Selected tags\n        </Typography>\n      </Box>\n      <List\n        style={{\n          overflowY: \"scroll\",\n          height: `${height - 146}px`,\n          paddingRight: \"12px\",\n          bgcolor: \"background.paper\",\n        }}\n      >\n        {selectedTags.map((value, index) => {\n          const labelId = `checkbox-list-label-${value}`;\n          const { id, name_tag, tag_table, address, data_type, comment, label } = value;\n\n          return (\n            <Tooltip\n              key={id}\n              placement=\"right\"\n              title={\n                <Typography sx={{ m: 0, overflowWrap: \"break-word\" }} paragraph={true}>\n                  Address: {address}\n                  <br />\n                  Datatype: {data_type}\n                  <br />\n                  Tagtable: {tag_table}\n                  <br />\n                  Comment: {comment}\n                </Typography>\n              }\n            >\n              <ListItem divider dense={true}>\n                <ListItemText\n                  id={labelId}\n                  primary={\n                    <Typography sx={{ m: 0, overflowWrap: \"break-word\" }} paragraph={true}>\n                      TAG: {name_tag}\n                      <br />\n                      GROUP: {label}\n                    </Typography>\n                  }\n                />\n                <IconButton\n                  onClick={() => removeSelectedTagHandler(index)}\n                  edge=\"end\"\n                  aria-label=\"comments\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItem>\n            </Tooltip>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n};\nexport default SelectedTagsList;\n","import React from \"react\";\nimport { DesktopDateTimePicker } from '@mui/x-date-pickers';\nimport TextField from '@mui/material/TextField';\n\nconst DateTimePickerComponent = ({ label, handler, value }) => {\n\n    return (\n      <DesktopDateTimePicker\n        inputFormat=\"yy:MM:dd-HH:mm:ss\"\n        views={['year', 'month', 'day', 'hours', 'minutes', 'seconds']}\n        ampm={false}\n        label={label}\n        value={value}\n        onChange={(value) => { handler(value) }}\n        renderInput={(params) => <TextField {...params} />}\n        maxDateTime={Date.now()}\n      />\n    )\n}\n\nexport default DateTimePickerComponent\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function AlertDialog({alertOpen, setAlertStateHandler, alertMessage}) {\n\n  return (\n    <div>\n      <Dialog\n        open={alertOpen}\n        onClose={() => {setAlertStateHandler(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {'You fogot something'}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {alertMessage}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {setAlertStateHandler(false)}} autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","// import { format } from 'date-fns'\n\nconst chartDataAndOptionsCreater = (checkedArr, dataSetArr) => {\n  console.log(\"dataSetArr: \", dataSetArr);\n  console.log(\"checkedArr: \", checkedArr);\n  const BORDERCOLORS = [\n    \"rgba(239, 71, 111, 0.5)\",\n    \"rgba(255, 209, 102, 0.5)\",\n    \"rgba(64, 97, 84, 0.5)\",\n    \"rgba(17, 138, 178, 0.5)\",\n    \"rgba(255, 99, 30, 0.5)\",\n    \"rgba(249, 248, 83, 1.0)\",\n    \"rgba(53, 82, 235, 0.5)\",\n    \"rgba(78, 155, 30, 0.5)\",\n    \"rgba(153, 32, 135, 0.5)\",\n    \"rgba(138, 155, 110, 1.0)\",\n  ];\n\n  const BACKGROUNDCORORS = [\n    \"rgba(239, 71, 111, 0.7)\",\n    \"rgba(255, 209, 132, 0.9)\",\n    \"rgba(164, 97, 84, 0.7)\",\n    \"rgba(17, 138, 178, 0.7)\",\n    \"rgba(255, 99, 30, 0.7)\",\n    \"rgba(249, 248, 83, 0.7)\",\n    \"rgba(53, 82, 235, 0.7)\",\n    \"rgba(78, 155, 30, 0.7)\",\n    \"rgba(153, 32, 135, 0.7)\",\n    \"rgba(138, 155, 110, 0.5)\",\n  ];\n\n  const data = {};\n\n  const options = {\n    animation: false,\n    // parsing: true,\n    parsing: false,\n    responsive: true,\n    interaction: {\n      mode: \"index\",\n      intersect: false,\n    },\n    stacked: false,\n    plugins: {\n      decimation: {\n        enabled: true,\n        // algorithm: 'min-max',\n        algorithm: \"lttb\",\n        samples: 80,\n        threshold: 80,\n      },\n      title: {\n        text: \"Chart.js Line Chart - Multi Axis\",\n      },\n      zoom: {\n        pan: {\n          enabled: true,\n          mode: \"xy\",\n          overScaleMode: \"xy\",\n        },\n        zoom: {\n          wheel: {\n            enabled: true,\n          },\n          mode: \"xy\",\n          overScaleMode: \"xy\",\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: \"timeseries\",\n      },\n      // y: {\n      //   beginAtZero: true,\n      // },\n    },\n  };\n\n  let numbersOfArrays = checkedArr.length;\n  let label = \"\";\n\n  const datasets = Array.from({ length: numbersOfArrays }, () => {\n    return { data: [] };\n  });\n\n  dataSetArr.forEach((el) => {\n    if (label !== el._field) {\n      datasets[el.table].label = el._field;\n      label = el._field;\n      datasets[el.table].borderColor = BORDERCOLORS[el.table];\n      datasets[el.table].backgroundColor = BACKGROUNDCORORS[el.table];\n      datasets[el.table].yAxisID = label;\n      datasets[el.table].radius = 0;\n\n      options.scales[label] = {\n        beginAtZero: true,\n        type: \"linear\",\n        display: true,\n        position: el.table % 2 ? \"left\" : \"right\",\n        backgroundColor: BORDERCOLORS[el.table],\n        grid: {\n          drawOnChartArea: true,\n        },\n        min: 0,\n      };\n    }\n    datasets[el.table].data.push({\n      x: new Date(el._time).getTime(),\n      y: Math.round10(el._value, -2),\n    });\n  });\n  data.datasets = datasets;\n\n  return { data: data, options: options };\n};\n\nexport default chartDataAndOptionsCreater;\n","import { InfluxDB } from \"@influxdata/influxdb-client-browser\";\nimport chartDataAndOptionsCreater from \"../Libs/influxDataCreater\";\n\nasync function influxRequest(checkedArr, dateTimeStart, dateTimeEnd) {\n  const dateTimeStartUTC = dateTimeStart.toISOString();\n\n  const dateTimeEndUTC = dateTimeEnd.toISOString();\n  const datasets = [];\n\n  const requestArr = checkedArr.map((el) => `${el.name_tag} - ${el.label}`);\n  let str = \"\";\n  requestArr.forEach((element) => {\n    str = str + `r._field == \"${element}\" or `;\n  });\n  str = str.slice(0, str.length - 4);\n  const URL = \"http://192.168.8.167:8086/\";\n  const TOKEN =\n    \"AYxGUOAj0Ho1vqmyMeQDpHPaSPYNcTZznrQ9bDJCvNM9fvF6tAepPH6jyxuTaalmbqgZKe98efDVoCFAyu6kJw==\";\n  const ORG = \"evgenius\";\n  const BUCKET = \"Line\";\n  const MEASUREMENT = \"Line\";\n  const queryApi = new InfluxDB({ url: URL, token: TOKEN }).getQueryApi(ORG);\n\n  const fluxQuery = `from(bucket: \"${BUCKET}\")\n        |> range(start: ${dateTimeStartUTC}, stop: ${dateTimeEndUTC})\n        |> filter(fn: (r) => r._measurement == \"${MEASUREMENT}\")\n        |> filter(fn: (r) => ${str})\n        `;\nconsole.log(fluxQuery);\n  for await (const { values, tableMeta } of queryApi.iterateRows(fluxQuery)) {\n    const obj = tableMeta.toObject(values);\n    const { table, _field, _value, _time } = obj;\n\n    datasets.push({ table, _field, _value, _time });\n  }\n  console.log(\"\\nIterateRows SUCCESS\");\n  const data = chartDataAndOptionsCreater(checkedArr, datasets);\n  return data;\n}\n\n// export const dashRequest = () => {\n//   const URL = \"http://192.168.8.167:8086/\";\n//   const TOKEN =\n//     \"AYxGUOAj0Ho1vqmyMeQDpHPaSPYNcTZznrQ9bDJCvNM9fvF6tAepPH6jyxuTaalmbqgZKe98efDVoCFAyu6kJw==\";\n//   const ORG = \"evgenius\";\n//   const BUCKET = \"Line\";\n//   const MEASUREMENT = \"Line\";\n//   const queryApi = new InfluxDB({ url: URL, token: TOKEN }).getQueryApi(ORG);\n//   let str =\n//     'r._field == \"FO_Zone 1 Pyrometer - Finish Oven\" or r._field == \"FO_Zone 2 Pyrometer - Finish Oven\" or r._field == \"FO_Zone 3 Pyrometer - Finish Oven\"';\n//   const fluxQuery = `from(bucket: \"${BUCKET}\")\n//   |> range(start: -500ms, stop: -100ms)\n//   |> filter(fn: (r) => r._measurement == \"${MEASUREMENT}\")\n//   |> filter(fn: (r) => ${str})\n//   `;\n//   // console.log(fluxQuery);\n//   const response = [];\n//   const fluxObserver = {\n//     next(row, tableMeta) {\n//       const o = tableMeta.toObject(row);\n//       // console.log('o: ', o)\n//       response.push({ y: Math.round10(o._value, -1), x: o._time, field: o._field });\n//       // return response\n\n//       // console.log(`${Math.round10(o._value, -1)}`);\n//     },\n//     error(error) {\n//       console.error(error);\n//       console.log(\"\\nFinished ERROR\");\n//     },\n//     complete() {\n//       console.log(\"\\nFinished SUCCESS\");\n//     },\n//   };\n//   // console.log(fluxObserver);\n//   /** Execute a query and receive line table metadata and rows. */\n//   queryApi.queryRows(fluxQuery, fluxObserver);\n\n//   return response;\n// };\n\nexport default influxRequest;\n","import React, { useRef, useEffect, useState, lazy } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//MUI//\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Button from \"@mui/material/Button\";\nimport MenuOpenOutlinedIcon from \"@mui/icons-material/MenuOpenOutlined\";\nimport Grid2 from \"@mui/material/Unstable_Grid2\";\nimport Box from \"@mui/material/Box\";\nimport Divider from \"@mui/material/Divider\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Container from \"@mui/material/Container\";\nimport Stack from \"@mui/material/Stack\";\nimport { styled } from \"@mui/material/styles\";\nimport { purple } from \"@mui/material/colors\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\n//conponents//\nimport SaveSetComponent from \"../Components/SaveSetComponent/SaveSetCamponent\";\nimport AllTagsList from \"../Components/AccordionAnalitycs/AllTagsList/AllTagsList\";\nimport SelectedTagsList from \"../Components/AccordionAnalitycs/SelectedTagsList/SelectedTagsList\";\nimport DateTimePickerComponent from \"../Components/DateTimePickers/DatePickerComponent/DateTimePickerComponent\";\nimport AlertDialog from \"../Components/Notification\";\n//utils//\n// import { getHours } from \"date-fns\";\nimport * as htmlToImage from \"html-to-image\";\nimport getWindowDimensions from \"../Libs/getWindowDimensions\";\nimport influxRequest from \"../api/InfluxAPI\";\nimport { getTagsAndGroupsQuery } from \"../api/analitycApi\";\nimport { refreshTokenHandler, userDatasetSave } from \"../api/userApi\";\nimport { checkTags } from \"../Redux/sliceAnalytic\";\n\nconst Chart = lazy(() => import(\"./Chart\" /* webpackChunkName: 'Chart' */));\n\nconst Analytic = () => {\n  const [isPopOpen, setPopOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [placement, setPlacement] = useState();\n  const [dateTimeStart, setDateTimeStart] = useState(Date.now());\n  const [dateTimeEnd, setDateTimeEnd] = useState(Date.now());\n  const [isHistorical, setIsHistorical] = useState();\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [drawerState, setDrawerState] = React.useState({ left: false });\n  const [data, setData] = useState([]);\n\n  const [width, height] = getWindowDimensions();\n\n  const dispatch = useDispatch();\n\n  const accessToken = useSelector((state) => state.login.token.access);\n  const refreshToken = useSelector((state) => state.login.token.refresh);\n  const selectedTags = useSelector((state) => state.analytic.selectedTags);\n\n  const domEl = useRef(null);\n\n  const setAlertStateHandler = (value) => {\n    setAlertOpen(value);\n  };\n\n  const formStateCheck = (startTime, endTime) => {\n    if (!!!startTime) {\n      console.log(true);\n      setAlertStateHandler(true);\n      setAlertMessage(\"Check if you have set the range start time!\");\n      return false;\n    }\n\n    if (!!!endTime) {\n      console.log(true);\n      setAlertStateHandler(true);\n      setAlertMessage(\"Check if you have set the range end time!\");\n      return false;\n    }\n  };\n\n  const saveUserDatasetToServer = async (value) => {\n    const setName = value;\n\n    const dataUrl = await htmlToImage.toPng(domEl.current, { cacheBust: true });\n    const imageName = value;\n    const link = document.createElement(\"a\");\n\n    link.download = `${imageName}.jpeg`;\n    link.href = dataUrl;\n\n    const dataURLtoFile = (dataurl, filename) => {\n      let arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], filename, { type: mime });\n    };\n\n    const file = dataURLtoFile(dataUrl, link.download);\n\n    formStateCheck(dateTimeStart, dateTimeEnd, setName);\n\n    dispatch(refreshTokenHandler(refreshToken));\n    userDatasetSave(\n      accessToken,\n      file,\n      selectedTags,\n      dateTimeStart,\n      dateTimeEnd,\n      isHistorical,\n      setName\n    );\n  };\n\n  // useEffect(() => {\n  //   dispatch(getTagsAndGroupsQuery());\n  // }, [dispatch]);\n\n  const setDatasetNamehandleClick = (newPlacement, isHistorical) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setPopOpen(true);\n    setPlacement(newPlacement);\n    setIsHistorical(isHistorical);\n  };\n\n  const closePopperHandle = (value, _) => {\n    if (_) {\n      if (!!value) {\n        saveUserDatasetToServer(value);\n        setPopOpen(false);\n        return;\n      } else {\n        setAlertStateHandler(true);\n        setAlertMessage(\"Check if you have set the dataset name!\");\n        return;\n      }\n    }\n    setPopOpen(false);\n    return;\n  };\n\n  const dateTimeStartHandler = (value) => {\n    setDateTimeStart(value);\n  };\n\n  const dateTimeEndHandler = (value) => {\n    setDateTimeEnd(value);\n  };\n\n  const ColorButton = styled(Button)(({ theme }) => ({\n    color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: purple[500],\n    border: \"0px\",\n    height: height - 76,\n    borderRadius: \"0px\",\n    \"&:hover\": {\n      backgroundColor: purple[700],\n    },\n  }));\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n    setDrawerState({ ...drawerState, [anchor]: open });\n  };\n\n  const influxQueryHandler = () => {\n    influxRequest(selectedTags, dateTimeStart, dateTimeEnd).then((response) => setData(response));\n  };\n\n  return (\n    <Box>\n      <Grid2 container>\n        <Grid2 xs={1}>\n          <ColorButton\n            onClick={toggleDrawer(\"left\", true)}\n            sx={{ boxShadow: 6 }}\n            variant=\"contained\"\n          >\n            <MenuOpenOutlinedIcon />\n          </ColorButton>\n        </Grid2>\n        <Grid2 xs={11}>\n          <Container>{data.data !== undefined ? <Chart data={data} /> : <></>}</Container>\n        </Grid2>\n      </Grid2>\n      <SwipeableDrawer\n        sx={{ width: \"900px\" }}\n        disableBackdropTransition={true}\n        anchor={\"left\"}\n        open={drawerState[\"left\"]}\n        onClose={toggleDrawer(\"left\", false)}\n        onOpen={toggleDrawer(\"left\", true)}\n      >\n        <Grid2 container>\n          <Grid2 xs={4}>\n            <AllTagsList\n              height={height}\n              checkTags={checkTags}\n              selectedTags={selectedTags} />\n          </Grid2>\n          <Grid2 xs={4}>\n            <SelectedTagsList\n              height={height}\n              width={width}\n              checkTags={checkTags}\n              selectedTags={selectedTags}\n            />\n          </Grid2>\n          <Grid2 xs={3}>\n            <Paper sx={{ m: 2, p: 3, width: \"300px\" }} elevation={10} square>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <Stack spacing={3}>\n                  <Typography>Date & Time pickers</Typography>\n                  <DateTimePickerComponent\n                    label={\"Start date & time\"}\n                    handler={dateTimeStartHandler}\n                    value={dateTimeStart}\n                  />\n                  <Divider />\n                  <DateTimePickerComponent\n                    label={\"End date & time\"}\n                    handler={dateTimeEndHandler}\n                    value={dateTimeEnd}\n                  />\n                </Stack>\n              </LocalizationProvider>\n              <SaveSetComponent\n                isPopOpen={isPopOpen}\n                popAnchorEl={anchorEl}\n                popPlacement={placement}\n                closePopperHandle={closePopperHandle}\n              />\n            </Paper>\n            <Paper sx={{ mt: 10, m: 2, p: 3, width: \"300px\" }} elevation={10} square>\n              <Button\n                onClick={setDatasetNamehandleClick(\"right\", true)}\n                sx={{\n                  m: 1,\n                  position: \"senter\",\n                  height: \"50px\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                }}\n                variant=\"contained\"\n                size=\"large\"\n                fullWidth={true}\n              >\n                Save set as historical\n              </Button>\n              <Button\n                onClick={setDatasetNamehandleClick(\"right\", false)}\n                sx={{\n                  m: 1,\n                  position: \"senter\",\n                  height: \"50px\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                }}\n                variant=\"contained\"\n                size=\"large\"\n                fullWidth={true}\n              >\n                Save set as realtime\n              </Button>\n              <Button\n                onClick={influxQueryHandler}\n                sx={{\n                  m: 1,\n                  position: \"senter\",\n                  height: \"50px\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                }}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"warning\"\n                fullWidth={true}\n              >\n                Show historical Trand\n              </Button>\n              <Button\n                sx={{\n                  m: 1,\n                  position: \"senter\",\n                  height: \"50px\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                }}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"success\"\n                fullWidth={true}\n              >\n                Show realtime Trand\n              </Button>\n            </Paper>\n            <AlertDialog\n              alertOpen={alertOpen}\n              setAlertStateHandler={setAlertStateHandler}\n              alertMessage={alertMessage}\n            />\n          </Grid2>\n          <Grid2\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-end\",\n              flexWrap: \"nowrap\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n            xs={1}\n          >\n            <ColorButton\n              onClick={toggleDrawer(\"left\", false)}\n              style={{ height: height }}\n              sx={{ boxShadow: 6 }}\n              variant=\"contained\"\n            >\n              <MenuOpenOutlinedIcon style={{ transform: \"rotate(180deg)\" }} />\n            </ColorButton>\n          </Grid2>\n        </Grid2>\n      </SwipeableDrawer>\n    </Box>\n  );\n};\n\nexport default Analytic;\n"],"names":["getWindowDimensions","window","innerWidth","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","closePopperHandle","isPopOpen","popAnchorEl","popPlacement","datasetName","setDatasetName","Popper","open","anchorEl","placement","transition","TransitionProps","Fade","timeout","Paper","sx","p","m","elevation","Stack","spacing","TextField","value","onChange","event","currentTarget","id","label","type","size","autoFocus","Button","onClick","width","height","variant","checkTags","selectedTags","dispatch","useDispatch","tags","useSelector","state","analytic","groups","groupFilter","setGroupFilter","searchValue","setSearchValue","setValue","filteredByGroupTags","setFilteredByGroupsTags","searchedAndFilteredByGroupTags","setSearchedAndFilteredByGroupTags","tagsArr","filter","tag","name_tag","toLowerCase","includes","lisTtagsLength","length","rowHeith","square","Box","component","mb","border","minHeight","Typography","display","color","fontSize","ml","direction","offset","Autocomplete","disablePortal","options","freeSolo","_","newText","renderInput","params","itemSize","itemCount","layout","overscanCount","index","style","Tooltip","title","paragraph","address","data_type","tag_table","comment","ListItem","divider","dense","ListItemButton","role","undefined","tempArrSelectedTags","obj","find","el","elemIndex","binarySearch","console","log","push","createCheckedTagsArray","ListItemIcon","minWidth","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","overflowWrap","noWrap","List","overflowY","paddingRight","bgcolor","map","labelId","IconButton","splice","removeSelectedTagHandler","Delete","handler","DesktopDateTimePicker","inputFormat","views","ampm","maxDateTime","Date","now","AlertDialog","alertOpen","setAlertStateHandler","alertMessage","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","checkedArr","dataSetArr","BORDERCOLORS","BACKGROUNDCORORS","data","animation","parsing","responsive","interaction","mode","intersect","stacked","plugins","decimation","enabled","algorithm","samples","threshold","text","zoom","pan","overScaleMode","wheel","scales","x","numbersOfArrays","datasets","Array","from","forEach","_field","table","borderColor","backgroundColor","yAxisID","radius","beginAtZero","position","grid","drawOnChartArea","min","_time","getTime","y","Math","round10","_value","dateTimeStart","dateTimeEnd","dateTimeStartUTC","toISOString","dateTimeEndUTC","requestArr","str","element","slice","queryApi","InfluxDB","url","token","getQueryApi","fluxQuery","iterateRows","values","tableMeta","toObject","chartDataAndOptionsCreater","Chart","lazy","setPopOpen","setAnchorEl","setPlacement","setDateTimeStart","setDateTimeEnd","isHistorical","setIsHistorical","setAlertOpen","setAlertMessage","React","left","drawerState","setDrawerState","setData","accessToken","login","access","refreshToken","refresh","domEl","useRef","saveUserDatasetToServer","setName","htmlToImage","current","cacheBust","dataUrl","imageName","link","document","createElement","download","href","file","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","endTime","refreshTokenHandler","userDatasetSave","setDatasetNamehandleClick","newPlacement","ColorButton","styled","theme","palette","getContrastText","purple","borderRadius","toggleDrawer","anchor","key","Grid2","container","xs","boxShadow","MenuOpenOutlined","Container","SwipeableDrawer","disableBackdropTransition","onOpen","LocalizationProvider","dateAdapter","AdapterDateFns","Divider","mt","marginLeft","marginRight","fullWidth","influxRequest","then","response","flexDirection","justifyContent","flexWrap","alignContent","alignItems","transform"],"sourceRoot":""}